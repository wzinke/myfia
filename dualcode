#!/bin/bash
#
# dualcode
#
# created: 02.09.2014
# by zinke
#

### ToDo: - allow combination of slice dimensions
#         - add slice representation
#         - add option to use different thresholding
#         - make octave compatible
#         - try to find other free solution (R or ImageMagick)


Usage() {
cat << EOF

    Usage: $0 <featdir> <contnum> <ofl> [options]

    Create a statistical map using the dual code approach suggested by Allen et al.

        Elena A. Allen, Erik B. Erhardt, & Vince D. Calhoun (2012)
        Data Visualization in the Neurosciences: Overcoming the Curse of Dimensionality
        Neuron 74, 603 - 608

    OPTIONS:
            -bck     use different volume as background (must have same geometry)
            -mask    apply mask to statistical images
            -dim     slice dimension
            -slc     slices to print
                     numbers less than 1 indicate proportional slice numbers
            -s       scaling factor (default: 2)
            -ip      image interpolation (default: 2)
            -zthr    set upper z-threshold (default uses design.fsf)
            -beta    set upper threshold for the beta image
            -sig     use alternative mask to select significant voxel
            -brng    set intensity range for background
            -keep    do not delete temporary files (for debugging)


            ###########################################################
            ##   (c) wolf zinke (2014) - part of the MaFIA toolbox   ##
            ##         > MAcaque Functional Image Analysis <         ##
            ##            Licensed under the MIT license             ##
            ###########################################################


EOF
exit 1

}


if [ $# -lt 3 ]; then
    Usage
else
    featdir=$1
    statnum=$2
    ostem=$3
    shift 3
fi

#__________________________________________________________________________________________#
rtpath=$(dirname `which $0`)

tmpdir=`tmpnam tmpDual`
rm $tmpdir
mkdir -p $tmpdir/slices

#__________________________________________________________________________________________#
# define volumes according to the feat data
bckimg=$(remove_ext $featdir/example_func)
statmap=$(remove_ext $featdir/stats/zstat$statnum)
betamap=$(remove_ext $featdir/stats/cope$statnum)

fslmaths $featdir/thresh_zstat$statnum -bin $tmpdir/sigmap -odt char
sigmap=$tmpdir/sigmap

alph=$(cat $featdir/design.fsf | grep z_thresh | cut -d')' -f2)
beta='[]'

bckstem=$(basename $bckimg)
flext=$(basename $(ls $bckimg.*) | sed -e "s/$bckstem//g")

#__________________________________________________________________________________________#

slcset="0.2 0.3 0.4 0.5 0.6 0.7 0.8"
slcdim='Z'
bckrng='4000 8000'
ip=2
scl=2
do_mask=0
do_keep=0

while [ $# -gt 0 ] ;
do
    case $1 in
        -dim)   slcdim=$(echo $2 | awk '{print toupper($0)}')
                shift 2
                ;;
        -slc)   slcset=$2
                shift 2
                ;;
          -s)   scl=$2
                shift 2
                ;;
         -ip)   ip=$2
                shift 2
                ;;
       -zthr)   alph=$2
                shift 2
                ;;
       -beta)   beta=$2
                shift 2
                ;;
        -sig)   sigmap=$(remove_ext $2)
                shift 2
                ;;
        -bck)   bckimg=$(remove_ext $2)
                shift 2
                ;;
       -brng)   bckrng="$2 $3"
                shift 3
                ;;
       -mask)   maskimg=$(remove_ext $2)
                do_mask=1
                shift 2
                ;;
       -keep)   do_keep=1
                echo "tmp dir: $tmpdir"
                shift
                ;;
          -*)   echo "Wrong option: <$1>"
                echo ""
                Usage
                ;;
           *)   break
                ;;
    esac
done

#__________________________________________________________________________________________#

if [ $do_mask -eq 1 ]
then
    fslmaths $sigmap -mas $maskimg $tmpdir/sig_thr
    sigmap="$tmpdir/sig_thr"

    fslmaths $statmap -mas $maskimg $tmpdir/stat_thr
    statmap="$tmpdir/stat_thr"

    fslmaths $betamap -mas $maskimg $tmpdir/beta_thr
    betamap="$tmpdir/beta_thr"
fi

#__________________________________________________________________________________________#
### call matlab
echo "addpath('$rtpath'); dualcode_image('$bckimg$flext', '$statmap$flext', '$betamap$flext', '$sigmap$flext', [$slcset], '$slcdim', $beta, $alph, [$bckrng], '$tmpdir/slices/slc', $ip, $scl); exit;" | matlab -nodesktop -nosplash

#__________________________________________________________________________________________#
# merge images

slclst=$(ls $tmpdir/slices/slc*.png | grep -v colbar | sort -n -k1.6)
colslc=$(ls $tmpdir/slices/slc*colbar.png)

appndstr="$colslc"
for cslc in $slclst
do
    appndstr="$appndstr + $cslc"
done

pngappend $appndstr $ostem.png

#__________________________________________________________________________________________#
if [ $do_keep -eq 0 ]
then
    rm -r $tmpdir
fi

