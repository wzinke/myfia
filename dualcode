#!/bin/bash
#
# dualcode
#
# created: 02.09.2014
# by zinke
#

### ToDo: allow combination of slice dimensions
#         add slice representation
#         add option to use different thresholding

Usage() {
cat << EOF

    Usage: $0 <featdir> <contnum> <ofl> [options]

    Create a statistical map using the dual code approach suggested by Allen et al.

        Elena A. Allen, Erik B. Erhardt, & Vince D. Calhoun (2012)
        Data Visualization in the Neurosciences: Overcoming the Curse of Dimensionality
        Neuron 74, 603 - 608

    OPTIONS:
            -bck     use different volume as background (must have same geometry)
            -mask    apply mask to statistical images
            -dim     slice dimension
            -slc     slices to print
                     numbers less than 1 indicate proportional slice numbers
            -s       scaling factor (default: 2)
            -ip      image interpolation (default: 2)
            -zthr    set upper z-threshold (default uses design.fsf)
            -beta    set upper threshold for the beta image
            -brng    set intensity range for background


            ###########################################################
            ##   (c) wolf zinke (2014) - part of the MaFIA toolbox   ##
            ##         > MAcaque Functional Image Analysis <         ##
            ##            Licensed under the MIT license             ##
            ###########################################################


EOF
exit 1

}
 

if [ $# -lt 3 ]; then
    Usage
else
    featdir=$1
    statnum=$2
    ostem=$3
    shift 3
fi

#__________________________________________________________________________________________#
rtpath=$(dirname `which $0`)

tmpdir=`tmpnam tmpDual`
rm $tmpdir
mkdir -p $tmpdir/slices

#__________________________________________________________________________________________#
# define volumes according to the feat data
bckimg=remove_ext($featdir/example_func)
statmap=remove_ext($featdir/stats/zstat$statnum)
betamap=remove_ext($featdir/stats/cope$statnum)

fslmaths $featdir/thresh_zstat$statnum -bin $tmpdir/sigmap -odt char
sigmap=$tmpdir/sigmap

alph=$(cat $featdir/design.fsf | grep z_thresh | cut -d')' -f2)
beta='[]'

#__________________________________________________________________________________________#

slcset="0.15 0.3 0.45 0.6 0.75 0.9"
slcdim='z'
bckrng='4000 8000'
ip=2
scl=2

while [ $# -gt 0 ] ;
do
    case $1 in
        -dim)   slcdim=$2
                shift 2
                ;;
        -slc)   slcset=$2
                shift 2
                ;;
          -s)   scl=$2
                shift 2
                ;;
         -ip)   ip=$2
                shift 2
                ;;
       -zthr)   alph=$2
                shift 2
                ;;
       -beta)   beta=$2
                shift 2
                ;;
        -bck)   bckimg=remove_ext($2)
                shift 2
                ;;
       -brng)   bckrng="$2 $3"
                shift 3
                ;;
       -mask)   sigmap=remove_ext($2)
                shift 2
                ;;
          -*)   echo "Wrong option: <$1>"
                echo ""
                Usage
                ;;
           *)   break
                ;;
    esac
done

#__________________________________________________________________________________________#
 









#__________________________________________________________________________________________#
### call matlab
echo "addpath('$rtpath'); dualcode_image('$bckimg', '$statmap', '$betamap', '$sigmap', [$slcset], '$slcdim', $beta, $alph, [$bckrng], '$tmpdir/slices/slc', $ip, $scl); exit;"  | matlab -nodesktop -nosplash


#__________________________________________________________________________________________#
# merge images
pngappend $tmpdir/Yset.png + $pxl $tmpdir/Y_${cslc}.png $tmpdir/Yset.png




