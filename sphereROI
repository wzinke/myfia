#!/bin/bash
#
# sphereROI
#
# created: 21.07.2013
# by zinke
#

# TODO: Add image transformations by adding a target image file and 
#       optional a transformation matrix with std2imgcoord

Usage() {
cat << EOF

    Usage: $0 <coor> <radius> [options]
    
        create a spherical sphere with given radius centered at the voxel
        specified by coor as 'x y z'
        
        see: https://www.jiscmail.ac.uk/cgi-bin/webadmin?A2=FSL;6ce4bff3.1301

    OPTIONS:
            -ref    reference image 
                    (default: "$FSLDIR/data/standard/MNI152_T1_2mm_brain")
            -o      output file name
            -mm     input coordinates are in mm, not voxel
            -f      speed up the process (use -fmean instead of -dilF)

            ###########################################################
            ##   (c) wolf zinke (2013) - part of the MaFIA toolbox   ##
            ##         > MAcaque Functional Image Analysis <         ##
            ##   for comments and questions: wolfzinke@gmail.com     ##
            ##            Licensed under the MIT license             ##
            ###########################################################


EOF
exit 1

}
 

if [ $# -lt 4 ]; then
    Usage
else
    coorX=$1
    coorY=$2
    coorZ=$3
    radius=$4
    shift 5
fi

do_mean=0
onm=ROIsphere_X${coorX}Y${coorY}Z${coorZ}
refimg=$FSLDIR/data/standard/MNI152_T1_2mm_brain
otstr="-odt char"
krnlstr="-dilF"
#__________________________________________________________________________________________#

do_mm=0

while [ $# -gt 0 ] ;
do
    case $1 in
          -o)   onm=$1
                shift 2
                ;;
          -f)   do_mean=1
                otstr=""
                krnlstr="-fmean"
                shift 
                ;;
        -ref)   refimg=$1
                shift 2
                ;;
         -mm)   do_mm=1
                shift 
                ;;
           -*)   echo "Wrong option: <$1>"
                echo ""
                Usage
                ;;
           *)   break
                ;;
    esac
done

#__________________________________________________________________________________________#

if[ $do_mm -eq 1 ]
then
    vc=$(echo "${coorX} ${coorY} ${coorZ}" | std2imgcoord -img $refimg -std $refimg -vox -)
    coorX=$(echo "$vc" | cut -d' ' -f1)
    coorY=$(echo "$vc" | cut -d' ' -f2)
    coorZ=$(echo "$vc" | cut -d' ' -f3)
fi

fslmaths $refimg -mul 0 -add 1 -roi ${coorX} 1 ${coorY} 1 ${coorZ} 1 0 1 -kernel sphere $radius $krnlstr $onm $otstr

if [ $do_mean -eq 1 ]
then
    thresh=$(fslstats $onm -p 100)
    thresh=$(echo "$thresh / 2" | bc -l)
    fslmaths $onm -thr $thresh -bin $onm -odt char
fi
 
