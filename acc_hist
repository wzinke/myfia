#!/bin/bash
#
# acc_hist
#
# created: 26.09.2013
# by zinke
#

Usage() {
cat << EOF

    Usage: $0 <> [options]


    OPTIONS:
            -o      output filename
            -m      maskfile
            -cl     chance level (constrain the mean of one distribution to that)
            -keep   don't delete temporary files when finished

            ###########################################################
            ##   (c) wolf zinke (2013) - part of the MaFIA toolbox   ##
            ##         > MAcaque Functional Image Analysis <         ##
            ##            Licensed under the MIT license             ##
            ###########################################################

EOF
exit 1

}


if [ $# -lt 1 ]; then
    Usage
else
    infl=$(remove_ext $1)
    shift
fi

if [ $(imtest ${infl}) -eq 0 ]
then
    echo "ERROR: File doe not exist!"
    echo "       filename: ${infl}"
    exit 1
fi

srcpath=`dirname $(which $0)`

onm="${infl}_hist.eps"
# idir=$(dirname $1)

tmpdir=$(tmpnam tmp_hist)
rm $tmpdir
tmpdir="$(dirname $infl)/$tmpdir"
mkdir $tmpdir

#__________________________________________________________________________________________#
mstr=""
keep_tmp=0
cl=0.5

while [ $# -gt 0 ] ;
do
    case $1 in
          -o)   onm="$2"
                shift 2
                ;;
          -m)   mstr="-m $2"
                shift 2
                ;;
         -cl)   cl=$2
                shift 2
                ;;
        -keep)  keep_tmp=1
                echo "temporary working directory: $tmpdir"
                shift
                ;;
          -*)   echo "Wrong option: <$1>"
                echo ""
                Usage
                ;;
           *)   break
                ;;
    esac
done

#__________________________________________________________________________________________#


fslmeants -i $infl $mstr --showall --transpose -o $tmpdir/vxlval.dat

cat $tmpdir/vxlval.dat | awk '{print $4}' > $tmpdir/vxlval_1d.dat

echo "source('$srcpath/AccHist.r'); AccHist('$tmpdir/vxlval_1d.dat','$tmpdir/hist.eps', chlvl=$cl ); q();" | R --vanilla --slave

cext=$(echo "$onm"   | rev | cut -d. -f1 | rev )

if [ "$cext" == "eps" ]
then
    cp $tmpdir/hist.eps $onm
else
    convert $tmpdir/hist.eps  $onm
fi

#__________________________________________________________________________________________#
if [ $keep_tmp -eq 0 ]
then
    rm -r $tmpdir
fi


