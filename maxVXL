#!/bin/bash
#
# maxVXL
#
# created: 27.9.2013
# by zinke
#

Usage() {
cat << EOF

    Usage: maxVXL <fllst> [options]

    OPTIONS:
            -m      preselct voxels with this mask image
            -mthr   apply this threshold to the mask image
            -p      threshold voxels at this percentile value (0-100)
                    default: -p 90
            -n      select the <n> maximal voxels
            -r      select the <r> percent maximal voxel
            -iv     select minimal instead of maximal voxel intensities
            -kc     keep constant and/or zero values
            -max    determines the maximum value for a 4D data set
            -min    determines the minimum value for a 4D data set
            -mean   determines the mean value for a 4D data set (default)
            -med    determines the median value for a 4D data set
            -o      name of the mask containing selected voxels
            -keep   do not delete temporay files

            ###########################################################
            ##   (c) wolf zinke (2013) - part of the MaFIA toolbox   ##
            ##         > MAcaque Functional Image Analysis <         ##
            ##            Licensed under the MIT license             ##
            ###########################################################


EOF
exit 1

}

# TODO: add a cluster option, that selects the largest cluster of conected voxels as ROI


if [ $# -eq 0 ]; then
    Usage
else
    infl="$1"
    shift
fi

#__________________________________________________________________________________________#
tmpdir=`tmpnam tmp_vxlsel`
rm $tmpdir
mkdir $tmpdir

keep_tmp=0

ofl="MaxVxl"
seltyp="p"
thr=90
meanstr="-Tmean"
maskstr=""
maskstat=""
do_min=0
do_mask=0
mthr=""
rmconst="-mas $tmpdir/valmask"

while [ $# -gt 0 ] ;
do
    case $1 in
          -o)   ofl=$2
                shift 2
                ;;
          -p)   thr=$2
                seltyp="p"
                shift 2
                ;;
          -n)   thr=$2
                seltyp="n"
                shift 2
                ;;
          -r)   thr=$2
                seltyp="r"
                shift 2
                ;;
          -m)   do_mask=1
                maskimg=$2
                shift 2
                ;;
         -kc)   rmconst=""
                shift
                ;;
       -mthr)   mthr="-thr $2"
                shift 2
                ;;
        -max)   meanstr="-Tmax"
                shift
                ;;
        -min)   meanstr="-Tmin"
                shift
                ;;
        -med)   meanstr="-Tmedian"
                shift
                ;;
        -mean)  meanstr="-Tmean"
                shift
                ;;
         -iv)   do_min=1
                shift
                ;;
        -keep)  keep_tmp=1
                echo "tmp dir: $tmpdir"
                shift
                ;;
          -*)   Wrong option: <$1>"
                "
                Usage
                ;;
           *)   break
                ;;
    esac
done

mkdir -p $(dirname $ofl)

# echo "writing $ofl with selection type '$seltyp' at threshold $thr using $meanstr"

#__________________________________________________________________________________________#

if [ $do_mask -eq 1 ]
then
    fslmaths $maskimg $mthr -bin $tmpdir/maskimg -odt char
    maskstr="-mas $tmpdir/maskimg"
    maskstat="-k  $tmpdir/maskimg"
    maskts="-m    $tmpdir/maskimg" # bloody FSL, three functions, three different specifications...
fi

fslmerge -t $tmpdir/invals $infl

if [ $(fslnvols $tmpdir/invals) -eq 1 ]
then
    meanstr=""
    fslmaths $tmpdir/invals -abs -thr 0 -bin -fillh $tmpdir/valmask -odt char
else
    fslmaths $tmpdir/invals -Tmin $tmpdir/minvals
    fslmaths $tmpdir/invals -Tmax $tmpdir/maxvals

    fslmaths $tmpdir/maxvals -sub $tmpdir/minvals -thr 0 -bin -fillh $tmpdir/valmask -odt char
fi

fslmaths $tmpdir/invals $maskstr $rmconst $meanstr $tmpdir/invals_msk

ifl=$tmpdir/invals_msk

if [ $seltyp == 'p' ]
then
    if [ $do_min -eq 0 ]
    then
        pthr=$(fslstats $ifl $maskstat -p $thr)
        fslmaths $ifl -thr $pthr $ofl -odt char
    else
        thr=$(echo "100 - $thr" | bc -l)
        pthr=$(fslstats $ifl $maskstat -p $thr)
        fslmaths $ifl -uthr $pthr $ofl -odt char
    fi
else
    fslmeants -i $ifl $maskts --showall --transpose -o $tmpdir/vxllst.dat

    srcpath=`dirname $(which $0)`

    if [ $do_min -eq 0 ]
    then
        cat $tmpdir/vxllst.dat | sed -e 's/  / /g' | sort -k4 -n -r > $tmpdir/vxllst_srt.dat
    else
        cat $tmpdir/vxllst.dat | sed -e 's/  / /g' | sort -k4 -n    > $tmpdir/vxllst_srt.dat
    fi

    if [ $seltyp == 'r' ]
    then
        nv=$(fslstats $ifl $maskstat -V | cut -d' ' -f1)
        thr=$(echo "$thr * $nv / 100"   | bc -l | xargs printf "%1.0f")
    fi

    head -n $thr $tmpdir/vxllst_srt.dat | cut -d" " -f1-3 > $tmpdir/maxvxl.dat

    coor2mask $tmpdir/maxvxl.dat -ref $tmpdir/invals_msk -o $ofl
fi

#__________________________________________________________________________________________#

if [ $keep_tmp -eq 0 ]
then
    rm -r $tmpdir
fi
